{"version":3,"sources":["../../src/components/TitledCard.tsx","../../src/hooks/useHandleProcess.ts","../../src/hooks/useStoreState.ts","../../src/providers/BridgeProvider.tsx","../../src/providers/SessionProvider.tsx","../../src/providers/node/NodeProvider.tsx","../../src/providers/node/ClientProvider.tsx","../../src/providers/node/PublisherProvider.tsx","../../src/providers/node/ServiceProvider.tsx","../../src/providers/node/SubscriptionProvider.tsx","../../src/providers/LoggerProvider.tsx","../../src/components/BridgeConnection.tsx","components/SimpleClient.jsx","components/SimplePublisher.jsx","components/SimpleService.jsx","components/SimpleSubscription.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","main","headerTitle","color","white","TitledCard","children","title","raised","disablePadding","classes","root","style","padding","undefined","useHandleProcess","useState","processing","setProcessing","delay","result","process","setTimeout","useStoreState","Store","state","setState","BridgeContext","createContext","useBridge","bridge","useContext","Error","BridgeProvider","url","bridgeUrl","useEffect","value","SessionContext","SessionProvider","session","setSession","NodeContext","useNode","node","NodeProvider","nodeName","useSession","setNode","ClientContext","ClientProvider","serviceType","serviceName","client","setClient","PublisherContext","PublisherProvider","messageType","topicName","publisher","setPublisher","ServiceContext","ServiceProvider","callback","service","setService","SubscriptionContext","SubscriptionProvider","subscription","setSubscription","LoggerProvider","maxSnack","useLogger","snackbar","useSnackbar","success","variant","info","debug","warn","error","BridgeConnection","logger","connected","setConnected","setUrl","connecting","handleConnect","reason","code","err","validateUrl","maxWidth","paddingTop","container","spacing","item","xs","label","onChange","event","helperText","disabled","fullWidth","onClick","size","RequestForm","useClient","randomInteger","Math","floor","random","a","setA","b","setB","setResult","call","then","response","sum","catch","message","calling","handleCall","Grid","TextField","ev","newA","parseInt","target","Number","isNaN","type","newB","Button","CircularProgress","SimpleClient","PublishForm","usePublisher","data","setData","publish","strings","split","counter","length","push","String","join","incrementData","publishing","handlePublish","SimplePublisher","SimpleService","requests","setRequests","RequestList","Box","display","height","alignItems","justifyContent","Typography","requestItems","map","request","ListItem","button","divider","ListItemText","primary","id","List","prevRequests","newRequests","slice","unshift","uuid","overflow","SimpleSubscription","messages","setMessages","MessageList","messageItems","prevMessages","newMessages","App","margin","Container","md","sm","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df40e7c.chunk.js","sourcesContent":["import {\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React, { FunctionComponent, ReactNode, ReactNodeArray } from \"react\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\ninterface TitledCardProps {\n  children: ReactNode | ReactNodeArray;\n  title: string;\n  raised?: boolean;\n  disablePadding?: boolean;\n}\n\nconst TitledCard: FunctionComponent<TitledCardProps> = ({\n  children,\n  title,\n  raised,\n  disablePadding,\n}: TitledCardProps) => {\n  const classes = useStyles();\n\n  return (\n    <Card raised={raised}>\n      <CardHeader\n        title={title}\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent style={{ padding: disablePadding ? 0 : undefined }}>\n        {children}\n      </CardContent>\n    </Card>\n  );\n};\n\nTitledCard.defaultProps = {\n  raised: false,\n  disablePadding: false,\n};\n\nexport { TitledCard, TitledCardProps };\n","import { useState } from \"react\";\n\nfunction useHandleProcess(\n  process: () => void | Promise<void>,\n  delay: number\n): [boolean, () => void] {\n  const [processing, setProcessing] = useState<boolean>(false);\n\n  const handleProcess = () => {\n    if (delay === undefined) {\n      const result = process();\n      if (result instanceof Promise) {\n        setProcessing(true);\n        result.finally(() => {\n          setProcessing(false);\n        });\n      }\n    } else {\n      setProcessing(true);\n      setTimeout(async () => {\n        await process();\n        setProcessing(false);\n      }, delay);\n    }\n  };\n\n  return [processing, handleProcess];\n}\n\nexport default useHandleProcess;\n","import { Dispatch, useState } from \"react\";\nimport Store from \"store2\";\n\nfunction useStoreState<T>(\n  key: string,\n  initialValue: T | (() => T)\n): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(() => Store.get(key, initialValue));\n\n  return [\n    state,\n    (newState: T) => {\n      setState(newState);\n      Store.set(key, newState);\n    },\n  ];\n}\n\nexport default useStoreState;\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { Bridge } from \"kumo-client\";\nimport { useStoreState } from \"../hooks\";\n\nconst BridgeContext = createContext<Bridge | null>(null);\n\nfunction useBridge(): Bridge {\n  const bridge = useContext(BridgeContext);\n\n  if (bridge === null) {\n    throw Error(\"illegal bridge provider access\");\n  }\n\n  return bridge;\n}\n\ninterface BridgeProviderProps {\n  children: ReactNode | ReactNodeArray;\n  url: string | undefined;\n}\n\nconst BridgeProvider: FunctionComponent<BridgeProviderProps> = ({\n  children,\n  url,\n}: BridgeProviderProps) => {\n  const [bridge] = useState(() => new Bridge());\n\n  const [bridgeUrl] = useStoreState(\n    \"bridgeProviderUrl\",\n    url ?? \"ws://localhost:8080\"\n  );\n\n  useEffect(() => {\n    bridge.connect(bridgeUrl);\n  }, [bridgeUrl]);\n\n  return (\n    <BridgeContext.Provider value={bridge}>{children}</BridgeContext.Provider>\n  );\n};\n\nexport { Bridge, BridgeProvider, BridgeProviderProps, useBridge };\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { SessionHandler } from \"kumo-client\";\n\nimport { useBridge } from \"./BridgeProvider\";\n\nconst SessionContext = createContext<SessionHandler | null>(null);\n\nfunction useSession(): SessionHandler {\n  const session = useContext(SessionContext);\n\n  if (session === null) {\n    throw Error(\"illegal session provider access\");\n  }\n\n  return session;\n}\n\ninterface SessionProviderProps {\n  children: ReactNode | ReactNodeArray;\n}\n\nconst SessionProvider: FunctionComponent<SessionProviderProps> = ({\n  children,\n}: SessionProviderProps) => {\n  const bridge = useBridge();\n\n  const [session, setSession] = useState<SessionHandler | null>(null);\n\n  useEffect(() => {\n    bridge\n      .onConnect((newSession: SessionHandler) => {\n        setSession(newSession);\n      })\n      .onDisconnect(() => {\n        setSession(null);\n      });\n  }, [bridge]);\n\n  if (session === null) {\n    return null;\n  }\n\n  return (\n    <SessionContext.Provider value={session}>\n      {children}\n    </SessionContext.Provider>\n  );\n};\n\nexport { SessionHandler, SessionProvider, SessionProviderProps, useSession };\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { NodeHandler } from \"kumo-client\";\n\nimport { useSession } from \"../SessionProvider\";\n\nconst NodeContext = createContext<NodeHandler | null>(null);\n\nfunction useNode(): NodeHandler {\n  const node = useContext(NodeContext);\n\n  if (node === null) {\n    throw Error(\"illegal node provider access\");\n  }\n\n  return node;\n}\n\ninterface NodeProviderProps {\n  children: ReactNode | ReactNodeArray;\n  nodeName: string;\n}\n\nconst NodeProvider: FunctionComponent<NodeProviderProps> = ({\n  children,\n  nodeName,\n}: NodeProviderProps) => {\n  const session = useSession();\n\n  const [node, setNode] = useState<NodeHandler | null>(null);\n\n  useEffect(() => {\n    session.createNode(nodeName).then((newNode: NodeHandler) => {\n      setNode(newNode);\n    });\n  }, [session]);\n\n  if (node === null) {\n    return null;\n  }\n\n  return <NodeContext.Provider value={node}>{children}</NodeContext.Provider>;\n};\n\nexport { NodeHandler, NodeProvider, NodeProviderProps, useNode };\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { ClientHandler } from \"kumo-client\";\n\nimport { useNode } from \"./NodeProvider\";\n\nconst ClientContext = createContext<ClientHandler | null>(null);\n\nfunction useClient(): ClientHandler {\n  const client = useContext(ClientContext);\n\n  if (client === null) {\n    throw Error(\"illegal client provider access\");\n  }\n\n  return client;\n}\n\ninterface ClientProviderProps {\n  children: ReactNode | ReactNodeArray;\n  serviceType: string;\n  serviceName: string;\n}\n\nconst ClientProvider: FunctionComponent<ClientProviderProps> = ({\n  children,\n  serviceType,\n  serviceName,\n}: ClientProviderProps) => {\n  const node = useNode();\n\n  const [client, setClient] = useState<ClientHandler | null>(null);\n\n  useEffect(() => {\n    node\n      .createClient(serviceType, serviceName)\n      .then((newClient: ClientHandler) => {\n        setClient(newClient);\n      });\n  }, [node]);\n\n  if (client === null) {\n    return null;\n  }\n\n  return (\n    <ClientContext.Provider value={client}>{children}</ClientContext.Provider>\n  );\n};\n\nexport { ClientHandler, ClientProvider, ClientProviderProps, useClient };\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { PublisherHandler } from \"kumo-client\";\n\nimport { useNode } from \"./NodeProvider\";\n\nconst PublisherContext = createContext<PublisherHandler | null>(null);\n\nfunction usePublisher(): PublisherHandler {\n  const publisher = useContext(PublisherContext);\n\n  if (publisher === null) {\n    throw Error(\"illegal publisher access\");\n  }\n\n  return publisher;\n}\n\ninterface PublisherProviderProps {\n  children: ReactNode | ReactNodeArray;\n  messageType: string;\n  topicName: string;\n}\n\nconst PublisherProvider: FunctionComponent<PublisherProviderProps> = ({\n  children,\n  messageType,\n  topicName,\n}: PublisherProviderProps) => {\n  const node = useNode();\n\n  const [publisher, setPublisher] = useState<PublisherHandler | null>(null);\n\n  useEffect(() => {\n    node\n      .createPublisher(messageType, topicName)\n      .then((newPublisher: PublisherHandler) => {\n        setPublisher(newPublisher);\n      });\n  }, [node]);\n\n  if (publisher === null) {\n    return null;\n  }\n\n  return (\n    <PublisherContext.Provider value={publisher}>\n      {children}\n    </PublisherContext.Provider>\n  );\n};\n\nexport {\n  PublisherHandler,\n  PublisherProvider,\n  PublisherProviderProps,\n  usePublisher,\n};\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { ServiceCallback, ServiceHandler } from \"kumo-client\";\n\nimport { useNode } from \"./NodeProvider\";\n\nconst ServiceContext = createContext<ServiceHandler | null>(null);\n\nfunction useService(): ServiceHandler {\n  const service = useContext(ServiceContext);\n\n  if (service === null) {\n    throw Error(\"illegal service provider access\");\n  }\n\n  return service;\n}\n\ninterface ServiceProviderProps {\n  children: ReactNode | ReactNodeArray;\n  serviceType: string;\n  serviceName: string;\n  callback: ServiceCallback;\n}\n\nconst ServiceProvider: FunctionComponent<ServiceProviderProps> = ({\n  children,\n  serviceType,\n  serviceName,\n  callback,\n}: ServiceProviderProps) => {\n  const node = useNode();\n\n  const [service, setService] = useState<ServiceHandler | null>(null);\n\n  useEffect(() => {\n    node\n      .createService(serviceType, serviceName, callback)\n      .then((newService: ServiceHandler) => {\n        setService(newService);\n      });\n  }, [node]);\n\n  if (service === null) {\n    return null;\n  }\n\n  return (\n    <ServiceContext.Provider value={service}>\n      {children}\n    </ServiceContext.Provider>\n  );\n};\n\nexport {\n  ServiceCallback,\n  ServiceHandler,\n  ServiceProvider,\n  ServiceProviderProps,\n  useService,\n};\n","import React, {\n  createContext,\n  FunctionComponent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { SubscriptionCallback, SubscriptionHandler } from \"kumo-client\";\n\nimport { useNode } from \"./NodeProvider\";\n\nconst SubscriptionContext = createContext<SubscriptionHandler | null>(null);\n\nfunction useSubscription(): SubscriptionHandler {\n  const subscription = useContext(SubscriptionContext);\n\n  if (subscription === null) {\n    throw Error(\"illegal subscription access\");\n  }\n\n  return subscription;\n}\n\ninterface SubscriptionProviderProps {\n  children: ReactNode | ReactNodeArray;\n  messageType: string;\n  topicName: string;\n  callback: SubscriptionCallback;\n}\n\nconst SubscriptionProvider: FunctionComponent<SubscriptionProviderProps> = ({\n  children,\n  messageType,\n  topicName,\n  callback,\n}: SubscriptionProviderProps) => {\n  const node = useNode();\n\n  const [subscription, setSubscription] = useState<SubscriptionHandler | null>(\n    null\n  );\n\n  useEffect(() => {\n    node\n      .createSubscription(messageType, topicName, callback)\n      .then((newSubscription: SubscriptionHandler) => {\n        setSubscription(newSubscription);\n      });\n  }, [node]);\n\n  if (subscription === null) {\n    return null;\n  }\n\n  return (\n    <SubscriptionContext.Provider value={subscription}>\n      {children}\n    </SubscriptionContext.Provider>\n  );\n};\n\nexport {\n  SubscriptionCallback,\n  SubscriptionHandler,\n  SubscriptionProvider,\n  SubscriptionProviderProps,\n  useSubscription,\n};\n","import { SnackbarProvider, useSnackbar } from \"notistack\";\nimport React, { FunctionComponent, ReactNode, ReactNodeArray } from \"react\";\n\ninterface LoggerProviderProps {\n  children: ReactNode | ReactNodeArray;\n}\n\nconst LoggerProvider: FunctionComponent<LoggerProviderProps> = ({\n  children,\n}: LoggerProviderProps) => {\n  return <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>;\n};\n\ninterface Logger {\n  success: (message: string) => void;\n  info: (message: string) => void;\n  debug: (message: string) => void;\n  warn: (message: string) => void;\n  error: (message: string) => void;\n}\n\nfunction useLogger(): Logger {\n  const snackbar = useSnackbar();\n\n  return {\n    success: (message: string) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"success\" });\n      }\n    },\n    info: (message: string) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"info\" });\n      }\n    },\n    debug: (message: string) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message);\n      }\n    },\n    warn: (message: string) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"warning\" });\n      }\n    },\n    error: (message: string) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"error\" });\n      }\n    },\n  };\n}\n\nexport { Logger, LoggerProvider, LoggerProviderProps, useLogger };\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\n\nimport React, {\n  ChangeEvent,\n  FunctionComponent,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { TitledCard } from \"./TitledCard\";\n\nimport { useHandleProcess, useStoreState } from \"../hooks\";\nimport { useBridge, useLogger } from \"../providers\";\n\nconst BridgeConnection: FunctionComponent = () => {\n  const bridge = useBridge();\n  const logger = useLogger();\n\n  const [connected, setConnected] = useState(false);\n\n  const [url, setUrl] = useStoreState(\n    \"bridgeProviderUrl\",\n    \"ws://localhost:8080\"\n  );\n\n  const [connecting, handleConnect] = useHandleProcess(async () => {\n    await bridge.connect(url);\n  }, 500);\n\n  useEffect(() => {\n    bridge\n      ?.onConnect(() => {\n        logger.success(`Connected to the bridge server on ${url}!`);\n        setConnected(true);\n      })\n      .onDisconnect((code, reason) => {\n        logger.error(\n          \"Disconnected from the bridge server! \" +\n            `${reason || \"no reason\"} (${code || \"unknown\"}).`\n        );\n        setConnected(false);\n      })\n      .onError((err) => {\n        logger.error(`Found error! ${err.message}.`);\n        setConnected(false);\n      });\n  }, [bridge]);\n\n  const validateUrl = () => {\n    return url.startsWith(\"ws://\") && url.length > 5;\n  };\n\n  const onUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  if (connected) {\n    return null;\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box paddingTop={8}>\n        <TitledCard title=\"Connect to the bridge\" raised>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"URL\"\n                value={url}\n                onChange={onUrlChange}\n                error={!validateUrl()}\n                helperText={validateUrl() ? undefined : \"Invalid URL!\"}\n                disabled={connecting}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                onClick={handleConnect}\n                disabled={!validateUrl() || connecting}\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n              >\n                {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </TitledCard>\n      </Box>\n    </Container>\n  );\n};\n\nexport default BridgeConnection;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport {\n  ClientProvider,\n  NodeProvider,\n  TitledCard,\n  useClient,\n  useHandleProcess,\n  useLogger,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\n\nfunction RequestForm() {\n  const client = useClient();\n  const logger = useLogger();\n\n  const randomInteger = () => {\n    return Math.floor(Math.random() * 10);\n  };\n\n  const [a, setA] = useState(randomInteger);\n  const [b, setB] = useState(randomInteger);\n  const [result, setResult] = useState(\"\");\n\n  const [calling, handleCall] = useHandleProcess(() => {\n    return client\n      .call({ a, b })\n      .then((response) => {\n        setA(randomInteger());\n        setB(randomInteger());\n        setResult(`${a} + ${b} = ${response.sum}`);\n      })\n      .catch((err) => {\n        logger.error(`Failed to call data! ${err.message}.`);\n      });\n  }, 500);\n\n  const handleAChange = (ev) => {\n    const newA = parseInt(ev.target.value, 10);\n    setA(Number.isNaN(newA) ? a : newA);\n  };\n\n  const handleBChange = (ev) => {\n    const newB = parseInt(ev.target.value, 10);\n    setB(Number.isNaN(newB) ? b : newB);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={3}>\n        <TextField\n          label=\"A\"\n          value={a}\n          onChange={handleAChange}\n          disabled={client === null || calling}\n          variant=\"outlined\"\n          type=\"number\"\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <TextField\n          label=\"B\"\n          value={b}\n          onChange={handleBChange}\n          disabled={client === null || calling}\n          variant=\"outlined\"\n          type=\"number\"\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Result\"\n          value={result}\n          variant=\"outlined\"\n          fullWidth\n          disabled\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={handleCall}\n          disabled={client === null || calling}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n        >\n          {calling ? <CircularProgress size={24} /> : \"Call\"}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction SimpleClient() {\n  return (\n    <TitledCard title=\"Simple Client Node\" raised>\n      <NodeProvider nodeName=\"simple_client\">\n        <ClientProvider\n          serviceType=\"example_interfaces/srv/AddTwoInts\"\n          serviceName=\"/add_two_ints\"\n        >\n          <RequestForm />\n        </ClientProvider>\n      </NodeProvider>\n    </TitledCard>\n  );\n}\n\nexport default SimpleClient;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport {\n  NodeProvider,\n  PublisherProvider,\n  TitledCard,\n  useHandleProcess,\n  useLogger,\n  usePublisher,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\n\nfunction PublishForm() {\n  const publisher = usePublisher();\n  const logger = useLogger();\n\n  const [data, setData] = useState(\"Hello World! 0\");\n\n  const incrementData = () => {\n    const strings = data.split(\" \");\n    const counter = parseInt(strings[strings.length - 1], 10);\n    if (Number.isNaN(counter)) {\n      strings.push(\"0\");\n    } else {\n      strings[strings.length - 1] = String(counter + 1);\n    }\n\n    setData(strings.join(\" \"));\n  };\n\n  const [publishing, handlePublish] = useHandleProcess(() => {\n    return publisher\n      .publish({ data })\n      .then(() => {\n        incrementData();\n      })\n      .catch((err) => {\n        logger.error(`Failed to publish data! ${err.message}.`);\n      });\n  }, 500);\n\n  const handleDataChange = (ev) => {\n    setData(ev.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Data\"\n          value={data}\n          onChange={handleDataChange}\n          disabled={publisher === null || publishing}\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={handlePublish}\n          disabled={publisher === null || publishing}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n        >\n          {publishing ? <CircularProgress size={24} /> : \"Publish\"}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction SimplePublisher() {\n  return (\n    <TitledCard title=\"Simple Publisher Node\" raised>\n      <NodeProvider nodeName=\"simple_publisher\">\n        <PublisherProvider messageType=\"std_msgs/msg/String\" topicName=\"/topic\">\n          <PublishForm />\n        </PublisherProvider>\n      </NodeProvider>\n    </TitledCard>\n  );\n}\n\nexport default SimplePublisher;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { NodeProvider, ServiceProvider, TitledCard } from \"kumo-app\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction SimpleService() {\n  const [requests, setRequests] = useState([]);\n\n  const serviceCallback = (request) => {\n    const sum = request.a + request.b;\n\n    setRequests((prevRequests) => {\n      const newRequests = prevRequests.slice();\n      newRequests.unshift({\n        id: uuid(),\n        a: request.a,\n        b: request.b,\n        sum,\n      });\n\n      return newRequests;\n    });\n\n    return { sum };\n  };\n\n  const RequestList = () => {\n    if (requests.length <= 0) {\n      return (\n        <Box\n          display=\"flex\"\n          height=\"100%\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography>No data</Typography>\n        </Box>\n      );\n    }\n\n    const requestItems = requests.map((request) => {\n      return (\n        <ListItem key={request.id} button divider>\n          <ListItemText\n            primary={`${request.a} + ${request.b} = ${request.sum}`}\n          />\n        </ListItem>\n      );\n    });\n\n    return <List disablePadding>{requestItems}</List>;\n  };\n\n  return (\n    <TitledCard title=\"Simple Service Node\" raised disablePadding>\n      <NodeProvider nodeName=\"simple_service\">\n        <ServiceProvider\n          serviceType=\"example_interfaces/srv/AddTwoInts\"\n          serviceName=\"/add_two_ints\"\n          callback={serviceCallback}\n        >\n          <Box height={200} overflow=\"auto\">\n            <RequestList />\n          </Box>\n        </ServiceProvider>\n      </NodeProvider>\n    </TitledCard>\n  );\n}\n\nexport default SimpleService;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { NodeProvider, SubscriptionProvider, TitledCard } from \"kumo-app\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction SimpleSubscription() {\n  const [messages, setMessages] = useState([]);\n\n  const subscriptionCallback = (message) => {\n    setMessages((prevMessages) => {\n      const newMessages = prevMessages.slice();\n      newMessages.unshift({\n        id: uuid(),\n        data: message.data,\n      });\n\n      return newMessages;\n    });\n  };\n\n  const MessageList = () => {\n    if (messages.length <= 0) {\n      return (\n        <Box\n          display=\"flex\"\n          height=\"100%\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography>No data</Typography>\n        </Box>\n      );\n    }\n\n    const messageItems = messages.map((message) => {\n      return (\n        <ListItem key={message.id} button divider>\n          <ListItemText primary={message.data} />\n        </ListItem>\n      );\n    });\n\n    return <List disablePadding>{messageItems}</List>;\n  };\n\n  return (\n    <TitledCard title=\"Simple Subscription Node\" raised disablePadding>\n      <NodeProvider nodeName=\"simple_subscription\">\n        <SubscriptionProvider\n          messageType=\"std_msgs/msg/String\"\n          topicName=\"/topic\"\n          callback={subscriptionCallback}\n        >\n          <Box height={200} overflow=\"auto\">\n            <MessageList />\n          </Box>\n        </SubscriptionProvider>\n      </NodeProvider>\n    </TitledCard>\n  );\n}\n\nexport default SimpleSubscription;\n","import { Box, Container, Grid } from \"@material-ui/core\";\n\nimport {\n  BridgeProvider,\n  BridgeConnection,\n  LoggerProvider,\n  SessionProvider,\n} from \"kumo-app\";\n\nimport React from \"react\";\n\nimport {\n  SimpleClient,\n  SimplePublisher,\n  SimpleService,\n  SimpleSubscription,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <BridgeProvider>\n        <BridgeConnection />\n        <SessionProvider>\n          <Box margin={4}>\n            <Container maxWidth=\"md\">\n              <Grid container spacing={4}>\n                <Grid item md={6} sm={12}>\n                  <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                      <SimplePublisher />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <SimpleSubscription />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item md={6} sm={12}>\n                  <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                      <SimpleClient />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <SimpleService />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Container>\n          </Box>\n        </SessionProvider>\n      </BridgeProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}