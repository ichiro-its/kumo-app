{"version":3,"sources":["../../src/components/BoxedCircularProgress.jsx","../../src/components/LoggerProvider.jsx","../../src/components/TitledCard.jsx","../../src/hooks/useLogger.js","../../src/hooks/useStateOnce.js","../../src/hooks/useSession.js","../../src/hooks/node/useNode.js","../../src/hooks/useHandleProcess.js","../../src/hooks/useStoreState.js","../../src/components/SessionProvider.jsx","components/SimpleClientNode.jsx","../../src/hooks/node/useClient.js","components/SimplePublisherNode.jsx","../../src/hooks/node/usePublisher.js","components/SimpleServiceNode.jsx","../../src/hooks/node/useService.js","components/SimpleSubscriptionNode.jsx","../../src/hooks/node/useSubscription.js","App.jsx","index.jsx"],"names":["BoxedCircularProgress","display","minHeight","height","alignItems","justifyContent","LoggerProvider","children","maxSnack","PropTypes","isRequired","useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","main","headerTitle","color","white","TitledCard","title","raised","disablePadding","classes","root","style","padding","useLogger","snackbar","useSnackbar","success","variant","info","debug","warn","error","useStateOnce","callback","useState","state","setState","once","setOnce","useEffect","result","bool","SessionContext","createContext","useNode","nodeName","logger","session","useContext","err","useHandleProcess","process","delay","processing","setProcessing","setTimeout","useStoreState","key","initialValue","Store","SessionProvider","setSession","connecting","setConnecting","webSocketUrl","setWebSocketUrl","autoConnect","setAutoConnect","bridge","reason","validateWebSocketUrl","maxWidth","paddingTop","container","spacing","item","xs","label","value","onChange","event","helperText","disabled","fullWidth","onClick","size","SimpleClientNode","client","node","serviceType","serviceName","useClient","randomInteger","Math","floor","random","a","setA","b","setB","setResult","call","then","response","sum","catch","message","calling","handleCall","handleAChange","ev","newA","parseInt","target","Number","isNaN","handleBChange","newB","Content","Grid","TextField","type","Button","CircularProgress","SimplePublisherNode","publisher","messageType","topicName","usePublisher","data","setData","publish","strings","split","counter","length","push","String","join","incrementData","publishing","handlePublish","handleDataChange","SimpleServiceNode","requests","setRequests","service","useService","request","prevRequests","newRequests","slice","unshift","id","uuid","RequestList","Box","Typography","requestItems","map","ListItem","button","divider","ListItemText","primary","List","overflow","SimpleSubscriptionNode","messages","setMessages","subscription","useSubscription","prevMessages","newMessages","MessageList","messageItems","App","margin","Container","md","sm","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68935325.chunk.js","sourcesContent":["import { Box, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction BoxedCircularProgress() {\n  return (\n    <Box\n      display=\"flex\"\n      minHeight={100}\n      height=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n\nexport default BoxedCircularProgress;\n","import { SnackbarProvider } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction LoggerProvider({ children }) {\n  return <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>;\n}\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default LoggerProvider;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction TitledCard({ children, title, raised, disablePadding }) {\n  const classes = useStyles();\n\n  return (\n    <Card raised={raised}>\n      <CardHeader\n        title={title}\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent style={{ padding: disablePadding ? 0 : null }}>\n        {children}\n      </CardContent>\n    </Card>\n  );\n}\n\nTitledCard.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  title: PropTypes.string,\n  raised: PropTypes.bool,\n  disablePadding: PropTypes.bool,\n};\n\nTitledCard.defaultProps = {\n  title: \"\",\n  raised: false,\n  disablePadding: false,\n};\n\nexport default TitledCard;\n","import { useSnackbar } from \"notistack\";\n\nfunction useLogger() {\n  const snackbar = useSnackbar();\n\n  return {\n    success: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"success\" });\n      }\n    },\n    info: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"info\" });\n      }\n    },\n    debug: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message);\n      }\n    },\n    warn: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"warning\" });\n      }\n    },\n    error: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"error\" });\n      }\n    },\n  };\n}\n\nexport default useLogger;\n","import { useState, useEffect } from \"react\";\n\nfunction useStateOnce(callback) {\n  const [state, setState] = useState(null);\n  const [once, setOnce] = useState(false);\n\n  useEffect(() => {\n    if (state === null && !once) {\n      const result = callback();\n\n      if (result !== null) {\n        setOnce(true);\n        if (result instanceof Promise) {\n          result.then((newResult) => {\n            setState(newResult);\n          });\n        } else {\n          setState(result);\n        }\n      }\n    }\n  });\n\n  return state;\n}\n\nexport default useStateOnce;\n","import { createContext, useContext } from \"react\";\n\nconst SessionContext = createContext(null);\n\nconst useSession = () => {\n  return useContext(SessionContext);\n};\n\nexport { SessionContext, useSession };\n","import useLogger from \"../useLogger\";\nimport { useSession } from \"../useSession\";\nimport useStateOnce from \"../useStateOnce\";\n\nconst useNode = (nodeName) => {\n  const logger = useLogger();\n  const session = useSession();\n\n  return useStateOnce(() => {\n    if (session === null) {\n      return null;\n    }\n\n    return session.createNode(nodeName).catch((err) => {\n      logger.error(`Failed to create a Node! ${err.messsage}.`);\n    });\n  });\n};\n\nexport default useNode;\n","import { useState } from \"react\";\n\nfunction useHandleProcess(process, delay) {\n  const [processing, setProcessing] = useState(false);\n\n  const handleProcess = () => {\n    if (delay === undefined) {\n      const result = process();\n      if (result instanceof Promise) {\n        setProcessing(true);\n        result.finally(() => {\n          setProcessing(false);\n        });\n      }\n    } else {\n      setProcessing(true);\n      setTimeout(async () => {\n        await process();\n        setProcessing(false);\n      }, delay);\n    }\n  };\n\n  return [processing, handleProcess];\n}\n\nexport default useHandleProcess;\n","import { useState } from \"react\";\nimport Store from \"store2\";\n\nfunction useStoreState(key, initialValue) {\n  const [state, setState] = useState(Store.get(key, initialValue));\n\n  return [\n    state,\n    (newState) => {\n      setState(newState);\n      Store.set(key, newState);\n    },\n  ];\n}\n\nexport default useStoreState;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Bridge } from \"kumo-client\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nimport TitledCard from \"./TitledCard\";\nimport {\n  SessionContext,\n  useLogger,\n  useStateOnce,\n  useStoreState,\n} from \"../hooks\";\n\nfunction SessionProvider({ children }) {\n  const logger = useLogger();\n\n  const [session, setSession] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const [webSocketUrl, setWebSocketUrl] = useStoreState(\n    \"webSocketUrl\",\n    \"ws://localhost:8080\"\n  );\n\n  const [autoConnect, setAutoConnect] = useStoreState(\"autoConnect\", false);\n\n  const bridge = useStateOnce(() => {\n    return new Bridge()\n      .onConnect((newSession) => {\n        logger.success(`Connected to the bridge server on ${webSocketUrl}!`);\n\n        setSession(newSession);\n        setConnecting(false);\n        setAutoConnect(true);\n      })\n      .onDisconnect((code, reason) => {\n        logger.error(\n          \"Disconnected from the bridge server! \" +\n            `${reason || \"no reason\"} (${code}).`\n        );\n\n        setSession(null);\n        setConnecting(false);\n        setAutoConnect(false);\n      })\n      .onError((err) => {\n        logger.error(`Found error! ${err.message}.`);\n      });\n  });\n\n  useEffect(() => {\n    if (bridge !== null && session === null && autoConnect && !connecting) {\n      setConnecting(true);\n      bridge.connect(webSocketUrl);\n    }\n  });\n\n  const handleConnect = () => {\n    setConnecting(true);\n    setTimeout(() => {\n      bridge.connect(webSocketUrl);\n    }, 500);\n  };\n\n  const validateWebSocketUrl = () => {\n    return webSocketUrl.startsWith(\"ws://\") && webSocketUrl.length > 5;\n  };\n\n  const onWebSocketUrlChange = (event) => {\n    setWebSocketUrl(event.target.value);\n    setAutoConnect(false);\n  };\n\n  if (session === null) {\n    if (autoConnect) {\n      return null;\n    }\n\n    return (\n      <Container maxWidth=\"xs\">\n        <Box paddingTop={8}>\n          <TitledCard title=\"Create a New Session\" raised>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"WebSocket URL\"\n                  value={webSocketUrl}\n                  onChange={onWebSocketUrlChange}\n                  error={!validateWebSocketUrl()}\n                  helperText={\n                    validateWebSocketUrl() ? null : \"Invalid WebSocket URL!\"\n                  }\n                  disabled={connecting}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  onClick={handleConnect}\n                  disabled={!validateWebSocketUrl() || connecting}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth\n                >\n                  {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </TitledCard>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <SessionContext.Provider value={session}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n\nSessionProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default SessionProvider;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport {\n  BoxedCircularProgress,\n  TitledCard,\n  useNode,\n  useClient,\n  useHandleProcess,\n  useLogger,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\n\nfunction SimpleClientNode() {\n  const logger = useLogger();\n  const node = useNode(\"simple_client\");\n\n  const client = useClient(\n    node,\n    \"example_interfaces/srv/AddTwoInts\",\n    \"/add_two_ints\"\n  );\n\n  const randomInteger = () => {\n    return Math.floor(Math.random() * 10);\n  };\n\n  const [a, setA] = useState(randomInteger);\n  const [b, setB] = useState(randomInteger);\n  const [result, setResult] = useState(\"\");\n\n  const [calling, handleCall] = useHandleProcess(() => {\n    return client\n      .call({ a, b })\n      .then((response) => {\n        setA(randomInteger());\n        setB(randomInteger());\n        setResult(`${a} + ${b} = ${response.sum}`);\n      })\n      .catch((err) => {\n        logger.error(`Failed to call data! ${err.message}.`);\n      });\n  }, 500);\n\n  const handleAChange = (ev) => {\n    const newA = parseInt(ev.target.value, 10);\n    setA(Number.isNaN(newA) ? a : newA);\n  };\n\n  const handleBChange = (ev) => {\n    const newB = parseInt(ev.target.value, 10);\n    setB(Number.isNaN(newB) ? b : newB);\n  };\n\n  const Content = () => {\n    if (client === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={3}>\n          <TextField\n            label=\"A\"\n            value={a}\n            onChange={handleAChange}\n            disabled={client === null || calling}\n            variant=\"outlined\"\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            label=\"B\"\n            value={b}\n            onChange={handleBChange}\n            disabled={client === null || calling}\n            variant=\"outlined\"\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Result\"\n            value={result}\n            variant=\"outlined\"\n            fullWidth\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            onClick={handleCall}\n            disabled={client === null || calling}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {calling ? <CircularProgress size={24} /> : \"Call\"}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Client Node\" raised>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleClientNode;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useClient(node, serviceType, serviceName) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node.createClient(serviceType, serviceName).catch((err) => {\n      logger.error(`Failed to create a new Client! ${err.message}.`);\n    });\n  });\n}\n\nexport default useClient;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport {\n  BoxedCircularProgress,\n  TitledCard,\n  useHandleProcess,\n  useLogger,\n  useNode,\n  usePublisher,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\n\nfunction SimplePublisherNode() {\n  const logger = useLogger();\n  const node = useNode(\"simple_publisher\");\n  const publisher = usePublisher(node, \"std_msgs/msg/String\", \"/topic\");\n\n  const [data, setData] = useState(\"Hello World! 0\");\n\n  const incrementData = () => {\n    const strings = data.split(\" \");\n    const counter = parseInt(strings[strings.length - 1], 10);\n    if (Number.isNaN(counter)) {\n      strings.push(\"0\");\n    } else {\n      strings[strings.length - 1] = String(counter + 1);\n    }\n\n    setData(strings.join(\" \"));\n  };\n\n  const [publishing, handlePublish] = useHandleProcess(() => {\n    return publisher\n      .publish({ data })\n      .then(() => {\n        incrementData();\n      })\n      .catch((err) => {\n        logger.error(`Failed to publish data! ${err.message}.`);\n      });\n  }, 500);\n\n  const handleDataChange = (ev) => {\n    setData(ev.target.value);\n  };\n\n  const Content = () => {\n    if (publisher === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Data\"\n            value={data}\n            onChange={handleDataChange}\n            disabled={publisher === null || publishing}\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            onClick={handlePublish}\n            disabled={publisher === null || publishing}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {publishing ? <CircularProgress size={24} /> : \"Publish\"}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Publisher Node\" raised>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimplePublisherNode;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction usePublisher(node, messageType, topicName) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node.createPublisher(messageType, topicName).catch((err) => {\n      logger.error(`Failed to create a new Publisher! ${err.message}.`);\n    });\n  });\n}\n\nexport default usePublisher;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  BoxedCircularProgress,\n  TitledCard,\n  useNode,\n  useService,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction SimpleServiceNode() {\n  const node = useNode(\"simple_service\");\n\n  const [requests, setRequests] = useState([]);\n\n  const service = useService(\n    node,\n    \"example_interfaces/srv/AddTwoInts\",\n    \"/add_two_ints\",\n    (request) => {\n      const sum = request.a + request.b;\n\n      setRequests((prevRequests) => {\n        const newRequests = prevRequests.slice();\n        newRequests.unshift({\n          id: uuid(),\n          a: request.a,\n          b: request.b,\n          sum,\n        });\n\n        return newRequests;\n      });\n\n      return { sum };\n    }\n  );\n\n  const Content = () => {\n    if (service === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    const RequestList = () => {\n      if (requests.length <= 0) {\n        return (\n          <Box\n            display=\"flex\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography>No data</Typography>\n          </Box>\n        );\n      }\n\n      const requestItems = requests.map((request) => {\n        return (\n          <ListItem key={request.id} button divider>\n            <ListItemText\n              primary={`${request.a} + ${request.b} = ${request.sum}`}\n            />\n          </ListItem>\n        );\n      });\n\n      return <List disablePadding>{requestItems}</List>;\n    };\n\n    return (\n      <Box height={200} overflow=\"auto\">\n        <RequestList />\n      </Box>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Service Node\" raised disablePadding>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleServiceNode;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useService(node, serviceType, serviceName, callback) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node\n      .createService(serviceType, serviceName, callback)\n      .catch((err) => {\n        logger.error(`Failed to create a new Service! ${err.message}.`);\n      });\n  });\n}\n\nexport default useService;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  BoxedCircularProgress,\n  TitledCard,\n  useNode,\n  useSubscription,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction SimpleSubscriptionNode() {\n  const node = useNode(\"simple_subscription\");\n\n  const [messages, setMessages] = useState([]);\n\n  const subscription = useSubscription(\n    node,\n    \"std_msgs/msg/String\",\n    \"/topic\",\n    (message) => {\n      setMessages((prevMessages) => {\n        const newMessages = prevMessages.slice();\n        newMessages.unshift({\n          id: uuid(),\n          data: message.data,\n        });\n\n        return newMessages;\n      });\n    }\n  );\n\n  const Content = () => {\n    if (subscription === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    const MessageList = () => {\n      if (messages.length <= 0) {\n        return (\n          <Box\n            display=\"flex\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography>No data</Typography>\n          </Box>\n        );\n      }\n\n      const messageItems = messages.map((message) => {\n        return (\n          <ListItem key={message.id} button divider>\n            <ListItemText primary={message.data} />\n          </ListItem>\n        );\n      });\n\n      return <List disablePadding>{messageItems}</List>;\n    };\n\n    return (\n      <Box height={200} overflow=\"auto\">\n        <MessageList />\n      </Box>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Subscription Node\" raised disablePadding>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleSubscriptionNode;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useSubscription(node, messageType, topicName, callback) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node\n      .createSubscription(messageType, topicName, callback)\n      .catch((err) => {\n        logger.error(`Failed to create a new Subscription! ${err.message}.`);\n      });\n  });\n}\n\nexport default useSubscription;\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport { LoggerProvider, SessionProvider } from \"kumo-app\";\nimport React from \"react\";\n\nimport {\n  SimpleClientNode,\n  SimplePublisherNode,\n  SimpleServiceNode,\n  SimpleSubscriptionNode,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <SessionProvider>\n        <Box margin={4}>\n          <Container maxWidth=\"md\">\n            <Grid container spacing={4}>\n              <Grid item md={6} sm={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimplePublisherNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleSubscriptionNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={6} sm={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimpleClientNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleServiceNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </SessionProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}