{"version":3,"sources":["hooks/useLogger.js","hooks/useStateOnce.js","hooks/node/useClient.js","hooks/useSession.js","hooks/node/useNode.js","hooks/node/usePublisher.js","hooks/node/useService.js","hooks/node/useSubscription.js","hooks/useHandleProcess.js","hooks/useStoreState.js","components/BoxedCircularProgress.jsx","components/TitledCard.jsx","components/examples/SimpleClientNode.jsx","components/examples/SimplePublisherNode.jsx","components/examples/SimpleServiceNode.jsx","components/examples/SimpleSubscriptionNode.jsx","components/LoggerProvider.jsx","components/SessionProvider.jsx","App.jsx","index.jsx"],"names":["useLogger","snackbar","useSnackbar","success","message","enqueueSnackbar","variant","info","debug","warn","error","useStateOnce","callback","useState","state","setState","once","setOnce","useEffect","result","Promise","then","newResult","useClient","node","serviceType","serviceName","logger","createClient","catch","err","SessionContext","createContext","useNode","nodeName","session","useContext","createNode","messsage","usePublisher","messageType","topicName","createPublisher","useService","createService","useSubscription","createSubscription","useHandleProcess","process","delay","processing","setProcessing","undefined","finally","setTimeout","a","useStoreState","key","initialValue","Store","get","newState","set","BoxedCircularProgress","Box","display","minHeight","height","alignItems","justifyContent","CircularProgress","useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","palette","primary","main","headerTitle","color","common","white","TitledCard","children","title","raised","disablePadding","classes","Card","CardHeader","root","CardContent","style","padding","defaultProps","SimpleClientNode","client","randomInteger","Math","floor","random","setA","b","setB","setResult","call","response","sum","calling","handleCall","handleAChange","ev","newA","parseInt","target","value","Number","isNaN","handleBChange","newB","Content","Grid","container","spacing","item","xs","TextField","label","onChange","disabled","type","fullWidth","Button","onClick","size","SimplePublisherNode","publisher","data","setData","publish","strings","split","counter","length","push","String","join","incrementData","publishing","handlePublish","handleDataChange","SimpleServiceNode","requests","setRequests","service","request","prevRequests","newRequests","slice","unshift","id","uuid","RequestList","Typography","requestItems","map","ListItem","button","divider","ListItemText","List","overflow","SimpleSubscriptionNode","messages","setMessages","subscription","prevMessages","newMessages","MessageList","messageItems","LoggerProvider","maxSnack","SessionProvider","setSession","connecting","setConnecting","webSocketUrl","setWebSocketUrl","autoConnect","setAutoConnect","bridge","Bridge","onConnect","newSession","onDisconnect","code","reason","onError","connect","validateWebSocketUrl","startsWith","Container","maxWidth","paddingTop","event","helperText","Provider","App","margin","md","sm","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71d0d4b6.chunk.js","sourcesContent":["import { useSnackbar } from \"notistack\";\n\nfunction useLogger() {\n  const snackbar = useSnackbar();\n\n  return {\n    success: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"success\" });\n      }\n    },\n    info: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"info\" });\n      }\n    },\n    debug: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message);\n      }\n    },\n    warn: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"warning\" });\n      }\n    },\n    error: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"error\" });\n      }\n    },\n  };\n}\n\nexport default useLogger;\n","import { useState, useEffect } from \"react\";\n\nfunction useStateOnce(callback) {\n  const [state, setState] = useState(null);\n  const [once, setOnce] = useState(false);\n\n  useEffect(() => {\n    if (state === null && !once) {\n      const result = callback();\n\n      if (result !== null) {\n        setOnce(true);\n        if (result instanceof Promise) {\n          result.then((newResult) => {\n            setState(newResult);\n          });\n        } else {\n          setState(result);\n        }\n      }\n    }\n  });\n\n  return state;\n}\n\nexport default useStateOnce;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useClient(node, serviceType, serviceName) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node.createClient(serviceType, serviceName).catch((err) => {\n      logger.error(`Failed to create a new Client! ${err.message}`);\n    });\n  });\n}\n\nexport default useClient;\n","import { createContext, useContext } from \"react\";\n\nconst SessionContext = createContext(null);\n\nconst useSession = () => {\n  return useContext(SessionContext);\n};\n\nexport { SessionContext, useSession };\n","import useLogger from \"../useLogger\";\nimport { useSession } from \"../useSession\";\nimport useStateOnce from \"../useStateOnce\";\n\nconst useNode = (nodeName) => {\n  const logger = useLogger();\n  const session = useSession();\n\n  return useStateOnce(() => {\n    if (session === null) {\n      return null;\n    }\n\n    return session.createNode(nodeName).catch((err) => {\n      logger.error(`Failed to create a Node! ${err.messsage}`);\n    });\n  });\n};\n\nexport default useNode;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction usePublisher(node, messageType, topicName) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node.createPublisher(messageType, topicName).catch((err) => {\n      logger.error(`Failed to create a new Publisher! ${err.message}`);\n    });\n  });\n}\n\nexport default usePublisher;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useService(node, serviceType, serviceName, callback) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node\n      .createService(serviceType, serviceName, callback)\n      .catch((err) => {\n        logger.error(`Failed to create a new Service! ${err.message}`);\n      });\n  });\n}\n\nexport default useService;\n","import useLogger from \"../useLogger\";\nimport useStateOnce from \"../useStateOnce\";\n\nfunction useSubscription(node, messageType, topicName, callback) {\n  const logger = useLogger();\n\n  return useStateOnce(() => {\n    if (node === null) {\n      return null;\n    }\n\n    return node\n      .createSubscription(messageType, topicName, callback)\n      .catch((err) => {\n        logger.error(`Failed to create a new Subscription! ${err.message}`);\n      });\n  });\n}\n\nexport default useSubscription;\n","import { useState } from \"react\";\n\nfunction useHandleProcess(process, delay) {\n  const [processing, setProcessing] = useState(false);\n\n  const handleProcess = () => {\n    if (delay === undefined) {\n      const result = process();\n      if (result instanceof Promise) {\n        setProcessing(true);\n        result.finally(() => {\n          setProcessing(false);\n        });\n      }\n    } else {\n      setProcessing(true);\n      setTimeout(async () => {\n        await process();\n        setProcessing(false);\n      }, delay);\n    }\n  };\n\n  return [processing, handleProcess];\n}\n\nexport default useHandleProcess;\n","import { useState } from \"react\";\nimport Store from \"store2\";\n\nfunction useStoreState(key, initialValue) {\n  const [state, setState] = useState(Store.get(key, initialValue));\n\n  return [\n    state,\n    (newState) => {\n      setState(newState);\n      Store.set(key, newState);\n    },\n  ];\n}\n\nexport default useStoreState;\n","import { Box, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction BoxedCircularProgress() {\n  return (\n    <Box\n      display=\"flex\"\n      minHeight={100}\n      height=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n\nexport default BoxedCircularProgress;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction TitledCard({ children, title, raised, disablePadding }) {\n  const classes = useStyles();\n\n  return (\n    <Card raised={raised}>\n      <CardHeader\n        title={title}\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent style={{ padding: disablePadding ? 0 : null }}>\n        {children}\n      </CardContent>\n    </Card>\n  );\n}\n\nTitledCard.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  title: PropTypes.string,\n  raised: PropTypes.bool,\n  disablePadding: PropTypes.bool,\n};\n\nTitledCard.defaultProps = {\n  title: \"\",\n  raised: false,\n  disablePadding: false,\n};\n\nexport default TitledCard;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\n\nimport { useNode, useClient, useHandleProcess, useLogger } from \"../../hooks\";\nimport BoxedCircularProgress from \"../BoxedCircularProgress\";\nimport TitledCard from \"../TitledCard\";\n\nfunction SimpleClientNode() {\n  const logger = useLogger();\n  const node = useNode(\"simple_client\");\n\n  const client = useClient(\n    node,\n    \"example_interfaces/srv/AddTwoInts\",\n    \"/add_two_ints\"\n  );\n\n  const randomInteger = () => {\n    return Math.floor(Math.random() * 10);\n  };\n\n  const [a, setA] = useState(randomInteger);\n  const [b, setB] = useState(randomInteger);\n  const [result, setResult] = useState(\"\");\n\n  const [calling, handleCall] = useHandleProcess(() => {\n    return client\n      .call({ a, b })\n      .then((response) => {\n        setA(randomInteger());\n        setB(randomInteger());\n        setResult(`${a} + ${b} = ${response.sum}`);\n      })\n      .catch((err) => {\n        logger.error(`Failed to call data! ${err.message}`);\n      });\n  }, 500);\n\n  const handleAChange = (ev) => {\n    const newA = parseInt(ev.target.value, 10);\n    setA(Number.isNaN(newA) ? a : newA);\n  };\n\n  const handleBChange = (ev) => {\n    const newB = parseInt(ev.target.value, 10);\n    setB(Number.isNaN(newB) ? b : newB);\n  };\n\n  const Content = () => {\n    if (client === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={3}>\n          <TextField\n            label=\"A\"\n            value={a}\n            onChange={handleAChange}\n            disabled={client === null || calling}\n            variant=\"outlined\"\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField\n            label=\"B\"\n            value={b}\n            onChange={handleBChange}\n            disabled={client === null || calling}\n            variant=\"outlined\"\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Result\"\n            value={result}\n            variant=\"outlined\"\n            fullWidth\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            onClick={handleCall}\n            disabled={client === null || calling}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {calling ? <CircularProgress size={24} /> : \"Call\"}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Client Node\" raised>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleClientNode;\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\n\nimport {\n  useHandleProcess,\n  useLogger,\n  useNode,\n  usePublisher,\n} from \"../../hooks\";\n\nimport BoxedCircularProgress from \"../BoxedCircularProgress\";\nimport TitledCard from \"../TitledCard\";\n\nfunction SimplePublisherNode() {\n  const logger = useLogger();\n  const node = useNode(\"simple_publisher\");\n  const publisher = usePublisher(node, \"std_msgs/msg/String\", \"/topic\");\n\n  const [data, setData] = useState(\"Hello World! 0\");\n\n  const incrementData = () => {\n    const strings = data.split(\" \");\n    const counter = parseInt(strings[strings.length - 1], 10);\n    if (Number.isNaN(counter)) {\n      strings.push(\"0\");\n    } else {\n      strings[strings.length - 1] = String(counter + 1);\n    }\n\n    setData(strings.join(\" \"));\n  };\n\n  const [publishing, handlePublish] = useHandleProcess(() => {\n    return publisher\n      .publish({ data })\n      .then(() => {\n        incrementData();\n      })\n      .catch((err) => {\n        logger.error(`Failed to publish data! ${err.message}`);\n      });\n  }, 500);\n\n  const handleDataChange = (ev) => {\n    setData(ev.target.value);\n  };\n\n  const Content = () => {\n    if (publisher === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Data\"\n            value={data}\n            onChange={handleDataChange}\n            disabled={publisher === null || publishing}\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            onClick={handlePublish}\n            disabled={publisher === null || publishing}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {publishing ? <CircularProgress size={24} /> : \"Publish\"}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Publisher Node\" raised>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimplePublisherNode;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { useNode, useService } from \"../../hooks\";\nimport BoxedCircularProgress from \"../BoxedCircularProgress\";\nimport TitledCard from \"../TitledCard\";\n\nfunction SimpleServiceNode() {\n  const node = useNode(\"simple_service\");\n\n  const [requests, setRequests] = useState([]);\n\n  const service = useService(\n    node,\n    \"example_interfaces/srv/AddTwoInts\",\n    \"/add_two_ints\",\n    (request) => {\n      const sum = request.a + request.b;\n\n      setRequests((prevRequests) => {\n        const newRequests = prevRequests.slice();\n        newRequests.unshift({\n          id: uuid(),\n          a: request.a,\n          b: request.b,\n          sum,\n        });\n\n        return newRequests;\n      });\n\n      return { sum };\n    }\n  );\n\n  const Content = () => {\n    if (service === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    const RequestList = () => {\n      if (requests.length <= 0) {\n        return (\n          <Box\n            display=\"flex\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography>No data</Typography>\n          </Box>\n        );\n      }\n\n      const requestItems = requests.map((request) => {\n        return (\n          <ListItem key={request.id} button divider>\n            <ListItemText\n              primary={`${request.a} + ${request.b} = ${request.sum}`}\n            />\n          </ListItem>\n        );\n      });\n\n      return <List disablePadding>{requestItems}</List>;\n    };\n\n    return (\n      <Box height={200} overflow=\"auto\">\n        <RequestList />\n      </Box>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Service Node\" raised disablePadding>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleServiceNode;\n","import {\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { useNode, useSubscription } from \"../../hooks\";\nimport BoxedCircularProgress from \"../BoxedCircularProgress\";\nimport TitledCard from \"../TitledCard\";\n\nfunction SimpleSubscriptionNode() {\n  const node = useNode(\"simple_subscription\");\n\n  const [messages, setMessages] = useState([]);\n\n  const subscription = useSubscription(\n    node,\n    \"std_msgs/msg/String\",\n    \"/topic\",\n    (message) => {\n      setMessages((prevMessages) => {\n        const newMessages = prevMessages.slice();\n        newMessages.unshift({\n          id: uuid(),\n          data: message.data,\n        });\n\n        return newMessages;\n      });\n    }\n  );\n\n  const Content = () => {\n    if (subscription === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    const MessageList = () => {\n      if (messages.length <= 0) {\n        return (\n          <Box\n            display=\"flex\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography>No data</Typography>\n          </Box>\n        );\n      }\n\n      const messageItems = messages.map((message) => {\n        return (\n          <ListItem key={message.id} button divider>\n            <ListItemText primary={message.data} />\n          </ListItem>\n        );\n      });\n\n      return <List disablePadding>{messageItems}</List>;\n    };\n\n    return (\n      <Box height={200} overflow=\"auto\">\n        <MessageList />\n      </Box>\n    );\n  };\n\n  return (\n    <TitledCard title=\"Simple Subscription Node\" raised disablePadding>\n      <Content />\n    </TitledCard>\n  );\n}\n\nexport default SimpleSubscriptionNode;\n","import { SnackbarProvider } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction LoggerProvider({ children }) {\n  return <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>;\n}\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default LoggerProvider;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Bridge } from \"kumo-client\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nimport TitledCard from \"./TitledCard\";\nimport {\n  SessionContext,\n  useLogger,\n  useStateOnce,\n  useStoreState,\n} from \"../hooks\";\n\nfunction SessionProvider({ children }) {\n  const logger = useLogger();\n\n  const [session, setSession] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const [webSocketUrl, setWebSocketUrl] = useStoreState(\n    \"webSocketUrl\",\n    \"ws://localhost:8080\"\n  );\n\n  const [autoConnect, setAutoConnect] = useStoreState(\"autoConnect\", false);\n\n  const bridge = useStateOnce(() => {\n    return new Bridge()\n      .onConnect((newSession) => {\n        logger.success(`Connected to the bridge server on ${webSocketUrl}!`);\n\n        setSession(newSession);\n        setConnecting(false);\n        setAutoConnect(true);\n      })\n      .onDisconnect((code, reason) => {\n        logger.error(\n          \"Disconnected from the bridge server!\" +\n            ` ${reason || \"no reason\"} (${code})`\n        );\n\n        setSession(null);\n        setConnecting(false);\n        setAutoConnect(false);\n      })\n      .onError((err) => {\n        logger.error(`Found error! ${err.message}`);\n      });\n  });\n\n  useEffect(() => {\n    if (bridge !== null && session === null && autoConnect && !connecting) {\n      setConnecting(true);\n      bridge.connect(webSocketUrl);\n    }\n  });\n\n  const handleConnect = () => {\n    setConnecting(true);\n    setTimeout(() => {\n      bridge.connect(webSocketUrl);\n    }, 500);\n  };\n\n  const validateWebSocketUrl = () => {\n    return webSocketUrl.startsWith(\"ws://\") && webSocketUrl.length > 5;\n  };\n\n  const onWebSocketUrlChange = (event) => {\n    setWebSocketUrl(event.target.value);\n    setAutoConnect(false);\n  };\n\n  if (session === null) {\n    if (autoConnect) {\n      return null;\n    }\n\n    return (\n      <Container maxWidth=\"xs\">\n        <Box paddingTop={8}>\n          <TitledCard title=\"Create a New Session\" raised>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"WebSocket URL\"\n                  value={webSocketUrl}\n                  onChange={onWebSocketUrlChange}\n                  error={!validateWebSocketUrl()}\n                  helperText={\n                    validateWebSocketUrl() ? null : \"Invalid WebSocket URL\"\n                  }\n                  disabled={connecting}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  onClick={handleConnect}\n                  disabled={!validateWebSocketUrl() || connecting}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth\n                >\n                  {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </TitledCard>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <SessionContext.Provider value={session}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n\nSessionProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default SessionProvider;\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport {\n  LoggerProvider,\n  SessionProvider,\n  SimpleClientNode,\n  SimplePublisherNode,\n  SimpleServiceNode,\n  SimpleSubscriptionNode,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <SessionProvider>\n        <Box margin={4}>\n          <Container maxWidth=\"md\">\n            <Grid container spacing={4}>\n              <Grid item md={6} sm={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimplePublisherNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleSubscriptionNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item md={6} sm={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimpleClientNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleServiceNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </SessionProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}