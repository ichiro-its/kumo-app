{"version":3,"sources":["components/LoggerProvider.jsx","components/ContextProvider.jsx","App.jsx","index.jsx"],"names":["LoggerProvider","children","maxSnack","ContextContext","createContext","useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","palette","primary","main","headerTitle","color","common","white","ContextProvider","classes","logger","snackbar","useSnackbar","success","message","enqueueSnackbar","variant","info","debug","warn","error","useLogger","useState","Session","session","context","setContext","Store","get","webSocketUrl","setWebSocketUrl","connecting","setConnecting","onConnect","newContext","set","onDisconnect","code","reason","onError","err","useEffect","connect","validateWebSocketUrl","startsWith","length","Fade","in","Provider","value","Container","maxWidth","Card","CardHeader","title","root","CardContent","TextField","label","onChange","event","target","helperText","disabled","fullWidth","CardActions","Button","onClick","setTimeout","CircularProgress","size","App","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.452481b8.chunk.js","sourcesContent":["import { SnackbarProvider, useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function useLogger() {\n  const snackbar = useSnackbar();\n\n  return {\n    success: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"success\" });\n      }\n    },\n    info: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"info\" });\n      }\n    },\n    debug: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message);\n      }\n    },\n    warn: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"warning\" });\n      }\n    },\n    error: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"error\" });\n      }\n    },\n  };\n}\n\nfunction LoggerProvider({ children }) {\n  return <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>;\n}\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { LoggerProvider };\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  Fade,\n  makeStyles,\n  useTheme,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Session } from \"kumo-client\";\nimport PropTypes from \"prop-types\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport Store from \"store2\";\n\nimport { useLogger } from \"./LoggerProvider\";\n\nconst ContextContext = createContext(null);\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction ContextProvider({ children }) {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [session] = useState(new Session());\n  const [context, setContext] = useState(null);\n\n  const [webSocketUrl, setWebSocketUrl] = useState(\n    Store.get(\"webSocketUrl\", \"ws://localhost:8080\")\n  );\n\n  const [connecting, setConnecting] = useState(false);\n\n  session\n    .onConnect((newContext) => {\n      logger.success(\"Connected to the bridge server!\");\n\n      setContext(newContext);\n      setConnecting(false);\n\n      Store.set(\"webSocketUrlCanConnect\", true);\n    })\n    .onDisconnect((code, reason) => {\n      logger.error(`Disconnected from the bridge server! ${reason} (${code})`);\n\n      setContext(null);\n      setConnecting(false);\n\n      Store.set(\"webSocketUrlCanConnect\", false);\n    })\n    .onError((err) => {\n      logger.error(`Found error! ${err.message}`);\n    });\n\n  useEffect(() => {\n    if (context === null && Store.get(\"webSocketUrlCanConnect\", false)) {\n      session.connect(webSocketUrl);\n    }\n  });\n\n  const onConnectButton = () => {\n    setTimeout(() => {\n      session.connect(webSocketUrl);\n    }, 1000);\n\n    setConnecting(true);\n  };\n\n  const validateWebSocketUrl = () => {\n    return webSocketUrl.startsWith(\"ws://\") && webSocketUrl.length > 5;\n  };\n\n  const onWebSocketUrlChange = (event) => {\n    setWebSocketUrl(event.target.value);\n    Store.set(\"webSocketUrl\", event.target.value);\n    Store.set(\"webSocketUrlCanConnect\", false);\n  };\n\n  return (\n    <div>\n      <Fade in={context !== null}>\n        <div>\n          <ContextContext.Provider value={context}>\n            {children}\n          </ContextContext.Provider>\n        </div>\n      </Fade>\n      <Fade in={context === null}>\n        <div>\n          <Container maxWidth=\"xs\">\n            <Card>\n              <CardHeader\n                title=\"Create a New Session\"\n                classes={{\n                  root: classes.headerRoot,\n                  title: classes.headerTitle,\n                }}\n              />\n              <CardContent>\n                <TextField\n                  label=\"WebSocket URL\"\n                  value={webSocketUrl}\n                  onChange={onWebSocketUrlChange}\n                  error={!validateWebSocketUrl()}\n                  helperText={\n                    validateWebSocketUrl() ? \"\" : \"Invalid WebSocket URL\"\n                  }\n                  disabled={connecting}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </CardContent>\n              <CardActions>\n                <Button\n                  onClick={onConnectButton}\n                  disabled={!validateWebSocketUrl() || connecting}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth\n                >\n                  {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n                </Button>\n              </CardActions>\n            </Card>\n          </Container>\n        </div>\n      </Fade>\n    </div>\n  );\n}\n\nContextProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default ContextProvider;\n","import React from \"react\";\n\nimport ContextProvider from \"./components/ContextProvider\";\nimport { LoggerProvider } from \"./components/LoggerProvider\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <ContextProvider>\n        <div>Hello World</div>\n      </ContextProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}