{"version":3,"sources":["components/LoggerProvider.jsx","utilities/useStoreState.js","utilities/index.js","components/SessionProvider.jsx","components/SimpleClientNode.jsx","components/SimplePublisherNode.jsx","components/SimpleServiceNode.jsx","components/SimpleSubscriptionNode.jsx","App.jsx","index.jsx"],"names":["useLogger","snackbar","useSnackbar","success","message","enqueueSnackbar","variant","info","debug","warn","error","LoggerProvider","children","maxSnack","useStoreState","key","initialValue","useState","Store","get","state","setState","newState","set","SessionContext","createContext","useSession","useContext","useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","palette","primary","main","headerTitle","color","common","white","SessionProvider","classes","logger","bridge","setBridge","session","setSession","connecting","setConnecting","webSocketUrl","setWebSocketUrl","autoConnect","setAutoConnect","useEffect","newBridge","Bridge","onConnect","newSession","onDisconnect","code","reason","onError","err","connect","setTimeout","validateWebSocketUrl","startsWith","length","onWebSocketUrlChange","event","target","value","NewSessionCard","Card","raised","CardHeader","title","root","CardContent","TextField","label","onChange","helperText","disabled","fullWidth","CardActions","Button","onClick","CircularProgress","size","Box","Fade","in","Provider","position","top","minWidth","minHeight","Container","maxWidth","paddingTop","SimpleClientNode","node","setNode","client","setClient","calling","setCalling","randomInteger","Math","floor","random","a","setA","b","setB","result","setResult","createNode","then","newNode","catch","createClient","newClient","Grid","container","spacing","item","xs","type","call","response","sum","finally","SimplePublisherNode","publisher","setPublisher","publishing","setPublishing","data","setData","createPublisher","newPublisher","publish","strings","split","counter","parseInt","Number","isNaN","push","String","join","incrementData","SimpleServiceNode","service","setService","requests","setRequests","createService","request","prevRequests","newRequests","slice","unshift","id","uuid","newService","RequestList","style","justify","alignItems","Typography","requestItems","map","ListItem","button","ListItemText","List","disablePadding","height","overflow","SimpleSubscriptionNode","subscription","setSubscription","messages","setMessages","createSubscription","prevMessages","newMessages","newSubscription","MessageList","messageItems","App","margin","sm","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a1ede3.chunk.js","sourcesContent":["import { SnackbarProvider, useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function useLogger() {\n  const snackbar = useSnackbar();\n\n  return {\n    success: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"success\" });\n      }\n    },\n    info: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"info\" });\n      }\n    },\n    debug: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message);\n      }\n    },\n    warn: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"warning\" });\n      }\n    },\n    error: (message) => {\n      if (snackbar) {\n        snackbar.enqueueSnackbar(message, { variant: \"error\" });\n      }\n    },\n  };\n}\n\nfunction LoggerProvider({ children }) {\n  return <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>;\n}\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { LoggerProvider };\n","import { useState } from \"react\";\nimport Store from \"store2\";\n\nfunction useStoreState(key, initialValue) {\n  const [state, setState] = useState(Store.get(key, initialValue));\n\n  return [\n    state,\n    (newState) => {\n      setState(newState);\n      Store.set(key, newState);\n    },\n  ];\n}\n\nexport default useStoreState;\n","import useStoreState from \"./useStoreState\";\n\nexport default useStoreState;\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  Fade,\n  makeStyles,\n  useTheme,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Session as Bridge } from \"kumo-client\";\nimport PropTypes from \"prop-types\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n\nimport { useLogger } from \"./LoggerProvider\";\nimport useStoreState from \"../utilities\";\n\nconst SessionContext = createContext(null);\n\nconst useSession = () => {\n  return useContext(SessionContext);\n};\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction SessionProvider({ children }) {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [bridge, setBridge] = useState(null);\n  const [session, setSession] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const [webSocketUrl, setWebSocketUrl] = useStoreState(\n    \"webSocketUrl\",\n    \"ws://localhost:8080\"\n  );\n\n  const [autoConnect, setAutoConnect] = useStoreState(\"autoConnect\", false);\n\n  useEffect(() => {\n    if (bridge === null) {\n      const newBridge = new Bridge()\n        .onConnect((newSession) => {\n          logger.success(\"Connected to the bridge server!\");\n\n          setSession(newSession);\n          setConnecting(false);\n          setAutoConnect(true);\n        })\n        .onDisconnect((code, reason) => {\n          logger.error(\n            `Disconnected from the bridge server! ${reason} (${code})`\n          );\n\n          setSession(null);\n          setConnecting(false);\n          setAutoConnect(false);\n        })\n        .onError((err) => {\n          logger.error(`Found error! ${err.message}`);\n        });\n\n      setBridge(newBridge);\n    } else if (session === null && autoConnect) {\n      bridge.connect(webSocketUrl);\n    }\n  });\n\n  const onConnect = () => {\n    setConnecting(true);\n    setTimeout(() => {\n      bridge.connect(webSocketUrl);\n    }, 500);\n  };\n\n  const validateWebSocketUrl = () => {\n    return webSocketUrl.startsWith(\"ws://\") && webSocketUrl.length > 5;\n  };\n\n  const onWebSocketUrlChange = (event) => {\n    setWebSocketUrl(event.target.value);\n    setAutoConnect(false);\n  };\n\n  const NewSessionCard = () => {\n    return (\n      <Card raised>\n        <CardHeader\n          title=\"Create a New Session\"\n          classes={{\n            root: classes.headerRoot,\n            title: classes.headerTitle,\n          }}\n        />\n        <CardContent>\n          <TextField\n            label=\"WebSocket URL\"\n            value={webSocketUrl}\n            onChange={onWebSocketUrlChange}\n            error={!validateWebSocketUrl()}\n            helperText={validateWebSocketUrl() ? \"\" : \"Invalid WebSocket URL\"}\n            disabled={connecting}\n            variant=\"outlined\"\n            fullWidth\n          />\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={onConnect}\n            disabled={!validateWebSocketUrl() || connecting}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  };\n\n  return (\n    <Box>\n      <Fade in={session !== null}>\n        <Box>\n          <SessionContext.Provider value={session}>\n            {session !== null ? children : \"\"}\n          </SessionContext.Provider>\n        </Box>\n      </Fade>\n      <Fade in={session === null && !autoConnect}>\n        <Box position=\"absolute\" top={0} minWidth=\"100vw\" minHeight=\"100vh\">\n          <Container maxWidth=\"xs\">\n            <Box paddingTop={8}>\n              <NewSessionCard />\n            </Box>\n          </Container>\n        </Box>\n      </Fade>\n    </Box>\n  );\n}\n\nSessionProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport { SessionProvider, useSession };\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Grid,\n  makeStyles,\n  TextField,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useLogger } from \"./LoggerProvider\";\nimport { useSession } from \"./SessionProvider\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction SimpleClientNode() {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [node, setNode] = useState(null);\n  const [client, setClient] = useState(null);\n  const [calling, setCalling] = useState(false);\n\n  const randomInteger = () => {\n    return Math.floor(Math.random() * 10);\n  };\n\n  const [a, setA] = useState(randomInteger);\n  const [b, setB] = useState(randomInteger);\n  const [result, setResult] = useState(\"\");\n\n  const session = useSession();\n\n  useEffect(() => {\n    if (node === null) {\n      session\n        .createNode(\"simple_publisher\")\n        .then((newNode) => {\n          setNode(newNode);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Node! ${err.message}`);\n          setNode(null);\n        });\n    } else if (client === null) {\n      node\n        .createClient(\"example_interfaces/srv/AddTwoInts\", \"/add_two_ints\")\n        .then((newClient) => {\n          setClient(newClient);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Client! ${err.message}`);\n          setClient(null);\n        });\n    }\n  });\n\n  const onAChange = (event) => {\n    setA(event.target.value);\n  };\n\n  const onBChange = (event) => {\n    setB(event.target.value);\n  };\n\n  const onCall = () => {\n    if (client !== null) {\n      setCalling(true);\n      setTimeout(() => {\n        client\n          .call({ a, b })\n          .then((response) => {\n            setA(randomInteger());\n            setB(randomInteger());\n            setResult(`${a} + ${b} = ${response.sum}`);\n          })\n          .catch((err) => {\n            logger.error(`Failed to call data! ${err.message}`);\n          })\n          .finally(() => {\n            setCalling(false);\n          });\n      }, 500);\n    }\n  };\n\n  return (\n    <Card raised>\n      <CardHeader\n        title=\"Simple Client Node\"\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={3}>\n            <TextField\n              label=\"A\"\n              value={a}\n              onChange={onAChange}\n              disabled={client === null || calling}\n              variant=\"outlined\"\n              type=\"number\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"B\"\n              value={b}\n              onChange={onBChange}\n              disabled={client === null || calling}\n              variant=\"outlined\"\n              type=\"number\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Result\"\n              value={result}\n              variant=\"outlined\"\n              fullWidth\n              disabled\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={onCall}\n          disabled={client === null || calling}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n        >\n          {calling ? <CircularProgress size={24} /> : \"Call\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default SimpleClientNode;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  makeStyles,\n  TextField,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useLogger } from \"./LoggerProvider\";\nimport { useSession } from \"./SessionProvider\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction SimplePublisherNode() {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [node, setNode] = useState(null);\n  const [publisher, setPublisher] = useState(null);\n  const [publishing, setPublishing] = useState(false);\n\n  const [data, setData] = useState(\"Hello World! 0\");\n\n  const session = useSession();\n\n  useEffect(() => {\n    if (node === null) {\n      session\n        .createNode(\"simple_publisher\")\n        .then((newNode) => {\n          setNode(newNode);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Node! ${err.message}`);\n          setNode(null);\n        });\n    } else if (publisher === null) {\n      node\n        .createPublisher(\"std_msgs/msg/String\", \"/topic\")\n        .then((newPublisher) => {\n          setPublisher(newPublisher);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Publisher! ${err.message}`);\n          setPublisher(null);\n        });\n    }\n  });\n\n  const incrementData = () => {\n    const strings = data.split(\" \");\n    const counter = parseInt(strings[strings.length - 1], 10);\n    if (Number.isNaN(counter)) {\n      strings.push(\"0\");\n    } else {\n      strings[strings.length - 1] = String(counter + 1);\n    }\n\n    setData(strings.join(\" \"));\n  };\n\n  const onDataChange = (event) => {\n    setData(event.target.value);\n  };\n\n  const onPublish = () => {\n    if (publisher !== null) {\n      setPublishing(true);\n      setTimeout(() => {\n        publisher\n          .publish({ data })\n          .then(() => {\n            incrementData();\n          })\n          .catch((err) => {\n            logger.error(`Failed to publish data! ${err.message}`);\n          })\n          .finally(() => {\n            setPublishing(false);\n          });\n      }, 500);\n    }\n  };\n\n  return (\n    <Card raised>\n      <CardHeader\n        title=\"Simple Publisher Node\"\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent>\n        <TextField\n          label=\"Data\"\n          value={data}\n          onChange={onDataChange}\n          disabled={publisher === null || publishing}\n          variant=\"outlined\"\n          fullWidth\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={onPublish}\n          disabled={publisher === null || publishing}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n        >\n          {publishing ? <CircularProgress size={24} /> : \"Publish\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default SimplePublisherNode;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { useLogger } from \"./LoggerProvider\";\nimport { useSession } from \"./SessionProvider\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction SimpleServiceNode() {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [node, setNode] = useState(null);\n  const [service, setService] = useState(null);\n  const [requests, setRequests] = useState([]);\n\n  const session = useSession();\n\n  useEffect(() => {\n    if (node === null) {\n      session\n        .createNode(\"simpe_service\")\n        .then((newNode) => {\n          setNode(newNode);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Node! ${err.message}`);\n          setNode(null);\n        });\n    } else if (service === null) {\n      node\n        .createService(\n          \"example_interfaces/srv/AddTwoInts\",\n          \"/add_two_ints\",\n          (request) => {\n            const sum = request.a + request.b;\n\n            setRequests((prevRequests) => {\n              const newRequests = prevRequests.slice();\n              newRequests.unshift({\n                id: uuid(),\n                a: request.a,\n                b: request.b,\n                sum,\n              });\n\n              return newRequests;\n            });\n\n            return { sum };\n          }\n        )\n        .then((newService) => {\n          setService(newService);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Service! ${err.message}`);\n          setService(null);\n        });\n    }\n  });\n\n  const RequestList = () => {\n    if (requests.length <= 0) {\n      return (\n        <Grid\n          container\n          style={{ minHeight: \"100%\" }}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>No data</Typography>\n        </Grid>\n      );\n    }\n\n    const requestItems = requests.map((request) => {\n      return (\n        <ListItem key={request.id} button>\n          <ListItemText\n            primary={`${request.a} + ${request.b} = ${request.sum}`}\n          />\n        </ListItem>\n      );\n    });\n\n    return <List disablePadding>{requestItems}</List>;\n  };\n\n  return (\n    <Card raised>\n      <CardHeader\n        title=\"Simple Service Node\"\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent style={{ height: 200, overflow: \"auto\" }}>\n        <RequestList />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SimpleServiceNode;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { useLogger } from \"./LoggerProvider\";\nimport { useSession } from \"./SessionProvider\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nfunction SimpleSubscriptionNode() {\n  const classes = useStyles();\n  const logger = useLogger();\n\n  const [node, setNode] = useState(null);\n  const [subscription, setSubscription] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  const session = useSession();\n\n  useEffect(() => {\n    if (node === null) {\n      session\n        .createNode(\"simple_subscription\")\n        .then((newNode) => {\n          setNode(newNode);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Node! ${err.message}`);\n          setNode(null);\n        });\n    } else if (subscription === null) {\n      node\n        .createSubscription(\"std_msgs/msg/String\", \"/topic\", (message) => {\n          setMessages((prevMessages) => {\n            const newMessages = prevMessages.slice();\n            newMessages.unshift({\n              id: uuid(),\n              data: message.data,\n            });\n\n            return newMessages;\n          });\n        })\n        .then((newSubscription) => {\n          setSubscription(newSubscription);\n        })\n        .catch((err) => {\n          logger.error(`Failed to create a new Subscription! ${err.message}`);\n          setSubscription(null);\n        });\n    }\n  });\n\n  const MessageList = () => {\n    if (messages.length <= 0) {\n      return (\n        <Grid\n          container\n          style={{ minHeight: \"100%\" }}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>No data</Typography>\n        </Grid>\n      );\n    }\n\n    const messageItems = messages.map((message) => {\n      return (\n        <ListItem key={message.id} button>\n          <ListItemText primary={message.data} />\n        </ListItem>\n      );\n    });\n\n    return <List disablePadding>{messageItems}</List>;\n  };\n\n  return (\n    <Card raised>\n      <CardHeader\n        title=\"Simple Subscription Node\"\n        classes={{\n          root: classes.headerRoot,\n          title: classes.headerTitle,\n        }}\n      />\n      <CardContent style={{ height: 200, overflow: \"auto\" }}>\n        <MessageList />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SimpleSubscriptionNode;\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport {\n  LoggerProvider,\n  SessionProvider,\n  SimpleClientNode,\n  SimplePublisherNode,\n  SimpleServiceNode,\n  SimpleSubscriptionNode,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <SessionProvider>\n        <Box margin={4}>\n          <Container maxWidth=\"md\">\n            <Grid container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimplePublisherNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleSubscriptionNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <SimpleClientNode />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <SimpleServiceNode />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </SessionProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}